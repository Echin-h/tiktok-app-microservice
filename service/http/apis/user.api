syntax = "v1"

import "dto/dto.api"

// 用户注册
type (
	RegisterReq {
		Username string `form:"username" json:"username"`
		Password string `form:"password" json:"password"`
	}
	RegisterResp {
		BasicReply
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

// 用户登录
type (
	LoginReq {
		Username string `json:"username" form:"username"`
		Password string `json:"password" form:"password"`
	}
	LoginResp {
		BasicReply
		UserId int    `json:"user_id"`
		Token  string `json:"token"`
	}
)

@server (
	group:  user
	prefix: /tiktok/user
)
service app {
	@handler login
	post /login (LoginReq) returns (LoginResp)

	@handler register
	post /register (RegisterReq) returns (RegisterResp)
}

@server(
    group: user
    prefix: /tiktok/user
    middleware: Auth
)
service app{
    @handler getUserInfo
    get /getUserInfo () returns (GetUserInfoResp)

	@handler Follow
	post /follow (FollowReq) returns (FollowResp)

	@handler FollowList
	get /followList (FollowListReq) returns (FollowListResp)

	@handler FansList
	get /fansList (FansListReq) returns (FansListResp)

}

// 获取用户信息
type (
    GetUserInfoRequest {
        UserId int64    `form:"user_id"`
        Token  string `form:"token"`
    }
    GetUserInfoResp {
        BasicReply
        User User   `json:"user"`
    }
)

type (
	FollowReq {
		//		UserId     int64    `form:"user_id"`
		Token      string `form:"token"`
		ToUserId   int64    `form:"to_user_id"`
		ActionType int64    `form:"action_type"`
	}
	FollowResp {
		BasicReply
	}
)

// 获取关注列表
type (
	FollowListReq {
		UserId int64    `form:"user_id"`
		Token  string `form:"token"`
	}
	FollowListResp {
		BasicReply
		Users []User `json:"user_list"`
	}
)

// 获取粉丝列表
type (
	FansListReq {
		UserId int64    `form:"user_id"`
		Token  string `form:"token"`
	}
	FansListResp {
		BasicReply
		Users []User `json:"user_list"`
	}
)