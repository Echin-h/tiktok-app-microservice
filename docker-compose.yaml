version: '3'

networks:
  tiktok-microservice_net:
    driver: bridge

services:
  user-rpc-service:
    # 替换为您服务的Docker镜像名称
    image: tiktok-app-service:latest
    container_name: tiktok-app-microservice
    ports:
      - "8080:8080"  # 映射容器的8080端口到宿主机的8080端口
    environment:
      - NAME=user.rpc # 环境变量，用于服务名称
      - LISTEN_ON=0.0.0.0:8080 # 环境变量，用于服务监听地址
      - ETCD_HOSTS=127.0.0.1:2379 # 环境变量，用于etcd服务地址
      - ETCD_KEY=user.rpc # 环境变量，用于服务注册到etcd的key
    networks:
      - tiktok-microservice_net

  mysql:
    image: mysql:5.7
    container_name: tiktok-microservice-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=tiktok_microservice
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - TZ=Asia/Shanghai
    ports:
        - "33069:3306"
    volumes:
      - ./deploy/data/mysql/data:/var/lib/mysql
    privileged: true
    restart: always
    networks:
      - tiktok-microservice_net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost","--silent"]
      interval: 20s
      timeout: 10s
      retries: 3

  # redis container
  redis:
    image: redis:6.2.5
    container_name: tiktok-microservice-redis
    ports:
      - "36379:6379"
    environment:
      - TZ=Asia/Shanghai
      - REDIS_APPEND ONLY=yes  # 启用 AOF 持久化
      - REDIS_APPEND FSYNC=every sec  # 设置 AOF 持久化的同步频率为每秒
    volumes:
      - ./deploy/data/redis/data:/data:rw
#    command: "redis-server --requirepass G62m50oigInC30sf  --appendonly yes"
    command: redis-server --requirepass "" --appendonly yes
    privileged: true
    restart: always
    networks:
      - tiktok-microservice_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 10s
      retries: 3

